//
// buildscript {
//    repositories {
//        // ...
//        maven { url 'https://plugins.gradle.org/m2/' } // Gradle Plugin Portal
//    }
//    dependencies {
//        // ...
//        // OneSignal-Gradle-Plugin
//        classpath 'gradle.plugin.com.onesignal:onesignal-gradle-plugin:[0.10.2, 0.99.99]'
//    }
// }

// apply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'



def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def devPropertiesFile = rootProject.file("key.properties")
def devProperties = new Properties()
devProperties.load(new FileInputStream(devPropertiesFile))


android {
    compileSdkVersion 27

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.manapipes.app"
        minSdkVersion 18
        targetSdkVersion 27
        versionCode 8
        versionName "1.7"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

signingConfigs {
    release {
        keyAlias keystoreProperties['keyAlias']
        keyPassword keystoreProperties['keyPassword']
        storeFile file(keystoreProperties['storeFile'])
        storePassword keystoreProperties['storePassword']
    }
        debug {
        keyAlias devProperties['keyAlias']
        keyPassword devProperties['keyPassword']
        storeFile file(devProperties['storeFile'])
        storePassword devProperties['storePassword']
    }
}
buildTypes {
    release {
            signingConfig signingConfigs.debug
            minifyEnabled false
            shrinkResources false
            useProguard true 
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
}
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'  
}
